/* app/routes/competences.module.css */

.competences {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  min-height: 100vh;
  padding: 4rem 2rem;
  text-align: center;
  color: var(--text-primary);
  background-color: var(--bg-page);
}

/* Title & subtitle styling */
.pageTitle {
  font-size: 3.5rem;
  font-weight: 700;
  margin-bottom: 1rem;
  background: linear-gradient(45deg, var(--text-primary), var(--text-secondary));
  -webkit-background-clip: text;
  background-clip: text;
  /* -webkit-text-fill-color: transparent; */
}

.pageSubtitle {
  font-size: 1.1rem;
  line-height: 1.6;
  color: var(--text-secondary);
  margin-bottom: 3rem;
  max-width: 800px;
  opacity: 0.9;
}

/* Section selector styling */
.sections {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-bottom: 4rem;
  justify-content: center;
  max-width: 1200px;
}

.sectionButton {
  padding: 0.75rem 1.5rem;
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: var(--text-primary);
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  font-weight: 500;
  backdrop-filter: blur(10px);
}

.sectionButton:hover {
  background: rgba(255, 255, 255, 0.06);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.sectionButton[data-active='true'] {
  background: var(--nav-active-bg);
  color: var(--nav-active-color);
  border-color: transparent;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  transform: translateY(-2px);
}

/* Skills grid styling */
.skillsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 2rem;
  width: 100%;
  max-width: 1200px;
  padding: 1rem;
}

/* Skill cube styling */
.cube {
  --icon-color: var(--highlight-start);
  position: relative;
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  padding: 2rem 1.5rem;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(10px);
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
}

.cube::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 16px;
  background: linear-gradient(45deg, transparent, var(--icon-color), transparent);
  opacity: 0;
  transition: opacity 0.4s ease;
}

.cube:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
  border-color: var(--icon-color);
}

.cube:hover::before {
  opacity: 0.1;
}

/* Icon and text styling */
.cube svg {
  position: relative;
  margin-bottom: 1.2rem;
  color: var(--icon-color);
  transition: all 0.4s ease;
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.skillName {
  position: relative;
  font-weight: 600;
  font-size: 1.1rem;
  color: var(--text-primary);
  transition: all 0.4s ease;
}

.cube:hover svg {
  transform: scale(1.1);
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
}

.cube:hover .skillName {
  color: var(--icon-color);
}

/* Responsive design */
@media (max-width: 768px) {
  .competences {
    padding: 2rem 1rem;
  }

  .pageTitle {
    font-size: 2.5rem;
  }

  .pageSubtitle {
    font-size: 1rem;
    margin-bottom: 2rem;
  }

  .sections {
    margin-bottom: 2rem;
  }

  .sectionButton {
    padding: 0.6rem 1.2rem;
    font-size: 0.9rem;
  }

  .skillsGrid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .cube {
    padding: 1.5rem 1rem;
  }

  .cube svg {
    width: 30px;
    height: 30px;
  }

  .skillName {
    font-size: 1rem;
  }
}

/* Animation states */
.competences[data-status='entering'],
.competences[data-status='entered'] {
  opacity: 1;
  transform: translateY(0);
}

.competences[data-status='exiting'] {
  opacity: 0;
  transform: translateY(20px);
}

/* Fade in animation for elements */
.pageTitle[data-status='entering'],
.pageSubtitle[data-status='entering'],
.sections[data-status='entering'],
.skillsGrid[data-status='entering'] {
  animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
